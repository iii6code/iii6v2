{
  "contractName": "iii6CoinModelDrop",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PUB_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "dropToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUB_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"burn function for token holders only for burnable contracts\",\"params\":{\"_amount\":\"of tokens to burn // EXTERNAL\"}},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"buyTokens(uint256)\":{\"details\":\"buy function for token holders\",\"params\":{\"_amount\":\"of tokens to mint // EXTERNAL\"},\"returns\":{\"_0\":\"uint total price\"}},\"constructor\":{\"details\":\"creates an instance of iii6CoinModel\",\"params\":{\"_burn\":\"bool burnable\",\"_curr\":\"denomintaor currency // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\",\"_name\":\"token name\",\"_pause\":\"bool pauseble\",\"_rate\":\"token rate\",\"_supply\":\"max token supply // if 0-infinte\",\"_sym\":\"token symbol\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"dropToken()\":{\"details\":\"Drops users 100 Full Tokens For testnets only\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMaxSupply(uint256)\":{\"details\":\"sets the max supply\",\"params\":{\"\":\"// EXTERNAL only owner\",\"_newSupply\":\"ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc denomination currency can be set in setCurr()\"},\"returns\":{\"_0\":\"Max Supply\"}},\"setRate(uint256)\":{\"details\":\"sets the rate of currency in denomination currencycheck the ocoin for its state to determine what value to type in\",\"params\":{\"\":\"// EXTERNAL\",\"_rate\":\"ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc denomination currency can be set in setCurr()\"},\"returns\":{\"_0\":\"_setRate // ocoin name as enum Coins\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"toggleBurn()\":{\"details\":\"toggle the burnable functionality on the contract\",\"returns\":{\"_0\":\"burnable state of contract\"}},\"togglePause()\":{\"details\":\"toggle the pausable functionality on the contract\",\"returns\":{\"_0\":\"pausable state of contract\"}},\"toggleState()\":{\"details\":\"if contract pauses the state get checked and toggled via condition to opposite state\",\"returns\":{\"_0\":\"active state of contract (true = paused / false = active)\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/iii6utils/Assets/iii6CoinModel.sol\":\"iii6CoinModelDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"project:/contracts/iii6utils/Assets/iii6CoinModel.sol\":{\"keccak256\":\"0xd27ae683d5b798834b21fd84e9326b5e0b510fb378f232b8af7dcec9e3335050\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://96396b93ec8026d8ca557dd9a49e4141f7bcca6a936221b761dfc2275437a53b\",\"dweb:/ipfs/QmXQiaPkFgjzDkpfDLpCxxbVhBzkzRtgYmnhJmbeJHXQse\"]},\"project:/contracts/iii6utils/Math/iii6Math.sol\":{\"keccak256\":\"0x62d51cf950322b2723fdffbe4951a50e802e52231f341c08d4a6c600a4101bb4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://85469d20f0d232d967f86b687da1ae565c75a8a79b0d07b89ac3948035244507\",\"dweb:/ipfs/Qmd1Bh8ZpuFTF8QVP6WGrip64PWcfdpuRUGpcUWTRr6oXk\"]},\"project:/contracts/iii6utils/Math/iii6PriceMath.sol\":{\"keccak256\":\"0x6ee0e5f81ab0f4c9103f1b39589952f6b217e99dd11a68e653ab58ce39f230d5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://862b8826e2c8966943e4b24cb37f29a35f74d24cd92f73581d9980ba77c978de\",\"dweb:/ipfs/QmR1Eh9Xz2ifrsDQtJePoQVo7wecrwpxSyRtbuei4WBpj9\"]},\"project:/contracts/iii6utils/Misc/iii6Misc.sol\":{\"keccak256\":\"0xf40b07efc35eaccc4e0acb9025239a50a7d51cf4884aa329dae4f816069532c0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e25653269b3aa1499ae96dca98e444fe24df216085b782bc3e6f214e69336da8\",\"dweb:/ipfs/QmTiTaMbG5n8hMSoBNfiYYoE98eEcG5MFoMXCaEHza6XUE\"]},\"project:/contracts/iii6utils/Oracles/iii6PriceConsumer.sol\":{\"keccak256\":\"0x8f13a07554d75ead83b94eb5fca8dab244d701d530b31e39a47fd0f7e1ecca89\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://450b607becc252584949b5058d66c7677a5129ae05e6558063e4ac393d18e25b\",\"dweb:/ipfs/QmRpqWJYyRWH83UTq4JyPhBfoZ1MtfMkXNfvJe1PG9wrxR\"]},\"project:/contracts/iii6utils/Wallets/iii6Safes.sol\":{\"keccak256\":\"0x59976a9be53fb735cc76cf930200c0e4cd92123cad2333744edab1d01b81a97f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e020f407728cdf182669fbea6341f21f9c25e51831df0fa199025f1a3c064b47\",\"dweb:/ipfs/QmZ4FJBaeMgyohZM164PovUMVQ68GiqVWRRdH2BDa4sTeo\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//\n//      MMWKd:..                                                                                    ..:dKWMM\n//      MKl.                                                                                            .lKW\n//      O'       ..''''''''''''.     .''''''.     .'''''.      .''''''''''''''.     .''''''''''''..       'O\n//      '     .ckKNNWNWWWWWWWWWk.   .xNWWNWNl    ,0WWWWW0,     lNWWWWWWWWWNWNk'    ;0NNNWWWWWWWWNNKkc.     '\n//           ,OWMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMWO,\n//          .kMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMMMMk.\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMM0,    ;0NNWWMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMM0,     .'.',;lkNMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMK;              ,kWMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMX:    .:oxxdc'    .dWMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   ,OWMMMMMXl.   '0MMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMX;   .kMMMMMMMMK,   .xMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMM0'   .OMMMMMMMMX;   .xMMMMMMMMMMMM0'\n//          .OMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMK,    lNMMMMMMWx.   '0MMMMMMMMMMMMO.\n//           lNMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   .:x0KKKkc.   .dWMMMMMMMMMMMNl\n//      .    .c0WMMMMMMMMMMMMMMO.   .kMMMMMWo    ,KMMMMMK,     lWMMMMNd.     ....     .xNMMMMMMMMMMW0c.    .\n//      l      .,lddxxxxxxxxxxxc.    :xxxxxd,    .lxxxxxl.     ,dxxxxxd:.            .cdxxxxxxxxddl,.      l\n//      No.                                                                                              .oN\n//      MW0l'                                                                                          'l0WM\n//      MMMWKd;.                                                                                    .;dKWMMM\n//\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @dev            ::              Aron Mauritala Ayuk                                                                                                                                          //\n//      @msg            ::              stereo@iii6.xyz                                                                                                                                   //\n//      @github         ::              @stereoIII6\n//      @twitter        ::              @stereoIII6                                                                                                                                              //\n//                                                                                                                                                                                  //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @dev            ::              Juan Xavier Valverde                                                                                                                                    //\n//      @msg            ::              juanxavier@iii6.xyz                                                                                                                               //\n//      @twitter        ::              @JuanXavier                                                                                                                                             //\n//      @github         ::              @JuanXavier                                                                                                                                             //\n//                                                                                                                                                                                  //                                                                                                                                                                                 //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//  *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @company        ::              Fractio Holding                                                                                                                                                                       //\n//      @title          ::              iii6 Coin Model                                                                                                                            //\n//      @description    ::              ERC20 Model Preset Contract                                                                                                                           //\n//      @version        ::              0.0.1                                                                                                                                       //\n//      @purpose        ::              ERC20 Model Preset                                                                                                          //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//  *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"../Oracles/iii6PriceConsumer.sol\";\nimport \"../Math/iii6PriceMath.sol\";\nimport \"../Wallets/iii6Safes.sol\";\nimport \"../Misc/iii6Misc.sol\";\n\ncontract iii6CoinModel is\n    ERC20,\n    ERC20Pausable,\n    ERC20Burnable,\n    Ownable,\n    iii6Misc\n{\n    /**\n     * @dev this contract is a factory contract to deploy iii6CoinModel & iii6DiaModel\n     */\n    // ██╗███╗░░██╗██╗████████╗██╗░█████╗░██╗░░░░░██╗░██████╗░█████╗░████████╗██╗░█████╗░███╗░░██╗\n    // ██║████╗░██║██║╚══██╔══╝██║██╔══██╗██║░░░░░██║██╔════╝██╔══██╗╚══██╔══╝██║██╔══██╗████╗░██║\n    // ██║██╔██╗██║██║░░░██║░░░██║███████║██║░░░░░██║╚█████╗░███████║░░░██║░░░██║██║░░██║██╔██╗██║\n    // ██║██║╚████║██║░░░██║░░░██║██╔══██║██║░░░░░██║░╚═══██╗██╔══██║░░░██║░░░██║██║░░██║██║╚████║\n    // ██║██║░╚███║██║░░░██║░░░██║██║░░██║███████╗██║██████╔╝██║░░██║░░░██║░░░██║╚█████╔╝██║░╚███║\n    // ╚═╝╚═╝░░╚══╝╚═╝░░░╚═╝░░░╚═╝╚═╝░░╚═╝╚══════╝╚═╝╚═════╝░╚═╝░░╚═╝░░░╚═╝░░░╚═╝░╚════╝░╚═╝░░╚══╝\n    /**\n     * @dev declaration of storage vars\n     */\n    uint256 public rate;\n    uint256 public PUB_SUPPLY;\n    uint256 public MAX_SUPPLY;\n    bool private burns;\n    bool private pauses;\n    string public title;\n\n    /**\n     * @dev declaration of enums structs and arrays\n     */\n\n    /**\n     * @dev creates an instance of iii6CoinModel\n     * @param _name token name\n     * @param _sym token symbol\n     * @param _rate token rate\n     * @param _supply max token supply // if 0-infinte\n     * @param _burn bool burnable\n     * @param _pause bool pauseble\n     */\n    constructor(\n        string memory _name, // Token Name\n        string memory _sym, // Token Symbol\n        uint256 _rate, // Token Price in USD // 100 == 1 usd // 100000 = 1ETH\n        uint256 _supply, // Token Max Supply\n        bool _burn, // Burnable Option\n        bool _pause\n    ) ERC20(_name, _sym) Ownable(msg.sender) {\n        _setRate(_rate); /** @dev see _setRate() :: line138 */\n        MAX_SUPPLY = _supply;\n        title = _name;\n        burns = _burn;\n        pauses = _pause;\n        rate = _rate; /** @dev see Rates{} :: line97 */\n    }\n\n    // ██████╗░██████╗░██╗██╗░░░██╗░█████╗░████████╗███████╗  ███████╗███╗░░██╗██╗░░██╗\n    // ██╔══██╗██╔══██╗██║██║░░░██║██╔══██╗╚══██╔══╝██╔════╝  ██╔════╝████╗░██║╚██╗██╔╝\n    // ██████╔╝██████╔╝██║╚██╗░██╔╝███████║░░░██║░░░█████╗░░  █████╗░░██╔██╗██║░╚███╔╝░\n    // ██╔═══╝░██╔══██╗██║░╚████╔╝░██╔══██║░░░██║░░░██╔══╝░░  ██╔══╝░░██║╚████║░██╔██╗░\n    // ██║░░░░░██║░░██║██║░░╚██╔╝░░██║░░██║░░░██║░░░███████╗  ██║░░░░░██║░╚███║██╔╝╚██╗\n    // ╚═╝░░░░░╚═╝░░╚═╝╚═╝░░░╚═╝░░░╚═╝░░╚═╝░░░╚═╝░░░╚══════╝  ╚═╝░░░░░╚═╝░░╚══╝╚═╝░░╚═╝\n\n    /**\n     * @dev sets token price in denomination currency ocoin\n     * @param _newRate token price in $ocoin (denomination currency)\n     * denomination currency can be set in setCurr()\n     * @return uint256 rate in gascoin\n     */\n    function _setRate(uint256 _newRate) internal returns (uint256) {\n        uint256 gP = _newRate;\n        if (gP < 0) revert();\n        return rate = gP;\n    }\n\n    /**\n     * @dev overrides ERC20 & ERC20Pausable\n     */\n    function _update(address from, address to, uint256 value) internal virtual override(ERC20Pausable, ERC20) whenNotPaused {\n        super._update(from, to, value);\n    }\n\n    // ██████╗░██╗░░░██╗██████╗░██╗░░░░░██╗░█████╗░  ███████╗███╗░░██╗██╗░░██╗\n    // ██╔══██╗██║░░░██║██╔══██╗██║░░░░░██║██╔══██╗  ██╔════╝████╗░██║╚██╗██╔╝\n    // ██████╔╝██║░░░██║██████╦╝██║░░░░░██║██║░░╚═╝  █████╗░░██╔██╗██║░╚███╔╝░\n    // ██╔═══╝░██║░░░██║██╔══██╗██║░░░░░██║██║░░██╗  ██╔══╝░░██║╚████║░██╔██╗░\n    // ██║░░░░░╚██████╔╝██████╦╝███████╗██║╚█████╔╝  ██║░░░░░██║░╚███║██╔╝╚██╗\n    // ╚═╝░░░░░░╚═════╝░╚═════╝░╚══════╝╚═╝░╚════╝░  ╚═╝░░░░░╚═╝░░╚══╝╚═╝░░╚═╝\n\n    /**\n     * @dev sets the rate of currency in denomination currency\n     * @dev check the ocoin for its state to determine what value to type in\n     * @param // EXTERNAL\n     * @param _rate  ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\n     * denomination currency can be set in setCurr()\n     * @return _setRate // ocoin name as enum Coins\n     */\n    function setRate(uint256 _rate) external onlyOwner returns (uint256) {\n        return _setRate(_rate);\n    }\n\n    /**\n     * @dev sets the max supply\n     * @param // EXTERNAL only owner\n     * @param _newSupply  ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\n     * denomination currency can be set in setCurr()\n     * @return Max Supply\n     */\n    function setMaxSupply(uint256 _newSupply)\n        external\n        onlyOwner\n        returns (uint256)\n    {\n        return MAX_SUPPLY = _newSupply;\n    }\n\n    /**\n     * @dev burn function for token holders only for burnable contracts\n     * @param _amount of tokens to burn // EXTERNAL\n     */\n    function burn(uint256 _amount) public override {\n        if (burns == false) revert();\n        _burn(msg.sender, _amount);\n    }\n\n    /**\n     * @dev toggle the pausable functionality on the contract\n     * @return pausable state of contract\n     */\n    function togglePause() public onlyOwner returns (bool) {\n        return pauses = !pauses;\n    }\n\n    /**\n     * @dev toggle the burnable functionality on the contract\n     * @return burnable state of contract\n     */\n    function toggleBurn() public onlyOwner returns (bool) {\n        return burns = !burns;\n    }\n\n    /**\n     * @dev if contract pauses the state get checked and toggled via condition to opposite state\n     * @return active state of contract (true = paused / false = active)\n     */\n    function toggleState() public onlyOwner returns (bool) {\n        if (pauses == false) revert();\n        if (paused()) _unpause();\n        else _pause();\n        return paused();\n    }\n\n    /**\n     * @dev buy function for token holders\n     * @param _amount of tokens to mint // EXTERNAL\n     * @return uint total price\n     */\n    function buyTokens(uint256 _amount) external payable returns (uint256) {\n        if (msg.value <= _amount * rate) revert();\n        if ((MAX_SUPPLY - PUB_SUPPLY) - (_amount * 10**18) < 0) revert();\n        _mint(msg.sender, _amount * 10**18);\n        return _amount * rate;\n    }\n\n    /**\n     * @dev recieve function returns tokens on gascoin transfer to contract\n     */\n\n    receive() external payable {\n        // condition\n        _rcMint();\n    }\n\n    /**\n     * @dev recieve function returns tokens on gascoin and/or tokens transfer to contract\n     */\n    fallback() external payable {\n        // condition\n        // _rcMint();\n    }\n\n    /**\n     * @dev does mint  in exchange for gascoin action on recieve() and fallback()\n     */\n    function _rcMint() internal {\n        uint256 amount = msg.value / rate;\n        _mint(msg.sender, amount);\n    }\n}\n\nabstract contract iii6CoinModelDrop is iii6CoinModel {\n    /**\n     * @dev creates an instance of iii6CoinModel\n     * @param _name token name\n     * @param _sym token symbol\n     * @param _rate token rate\n     * @param _supply max token supply // if 0-infinte\n     * @param _burn bool burnable\n     * @param _pause bool pauseble\n     * @param _curr denomintaor currency // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\n     */\n    constructor(\n        string memory _name,\n        string memory _sym,\n        uint256 _rate,\n        uint256 _supply,\n        bool _burn,\n        bool _pause,\n        uint256 _curr\n    ) iii6CoinModel(_name, _sym, _rate, _supply, _burn, _pause) {}\n\n    /**\n     * @dev Drops users 100 Full Tokens For testnets only\n     */\n    function dropToken() external {\n        _mint(msg.sender, 100 * 10**18);\n    }\n}\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//\n//      MMWKd:..                                                                                    ..:dKWMM\n//      MKl.                                                                                            .lKW\n//      O'       ..''''''''''''.     .''''''.     .'''''.      .''''''''''''''.     .''''''''''''..       'O\n//      '     .ckKNNWNWWWWWWWWWk.   .xNWWNWNl    ,0WWWWW0,     lNWWWWWWWWWNWNk'    ;0NNNWWWWWWWWNNKkc.     '\n//           ,OWMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMWO,\n//          .kMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMMMMk.\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMM0,    ;0NNWWMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMM0,     .'.',;lkNMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMK;              ,kWMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMX:    .:oxxdc'    .dWMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   ,OWMMMMMXl.   '0MMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMX;   .kMMMMMMMMK,   .xMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMM0'   .OMMMMMMMMX;   .xMMMMMMMMMMMM0'\n//          .OMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMK,    lNMMMMMMWx.   '0MMMMMMMMMMMMO.\n//           lNMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   .:x0KKKkc.   .dWMMMMMMMMMMMNl\n//      .    .c0WMMMMMMMMMMMMMMO.   .kMMMMMWo    ,KMMMMMK,     lWMMMMNd.     ....     .xNMMMMMMMMMMW0c.    .\n//      l      .,lddxxxxxxxxxxxc.    :xxxxxd,    .lxxxxxl.     ,dxxxxxd:.            .cdxxxxxxxxddl,.      l\n//      No.                                                                                              .oN\n//      MW0l'                                                                                          'l0WM\n//      MMMWKd;.                                                                                    .;dKWMMM\n//\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n",
  "sourcePath": "/Users/iii6/Documents/GitHub/iii6v2/iii6v2/contracts/iii6utils/Assets/iii6CoinModel.sol",
  "ast": {
    "absolutePath": "project:/contracts/iii6utils/Assets/iii6CoinModel.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        649
      ],
      "Context": [
        3018
      ],
      "ERC20": [
        1640
      ],
      "ERC20Burnable": [
        1764
      ],
      "ERC20Pausable": [
        1798
      ],
      "IERC20": [
        1718
      ],
      "IERC20Errors": [
        1030
      ],
      "IERC20Metadata": [
        1824
      ],
      "LinkTokenInterface": [
        744
      ],
      "Ownable": [
        988
      ],
      "Pausable": [
        3135
      ],
      "iii6CoinModel": [
        6064
      ],
      "iii6CoinModelDrop": [
        6109
      ],
      "iii6Math": [
        7145
      ],
      "iii6Misc": [
        8109
      ],
      "iii6PriceConsumer": [
        8743
      ],
      "iii6PriceMath": [
        7951
      ],
      "iii6Safes": [
        10232
      ]
    },
    "id": 6110,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5747,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "8642:23:41"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 5748,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 1641,
        "src": "8667:55:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5749,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 989,
        "src": "8723:52:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 5750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 1765,
        "src": "8776:74:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "id": 5751,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 1799,
        "src": "8851:74:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/iii6utils/Oracles/iii6PriceConsumer.sol",
        "file": "../Oracles/iii6PriceConsumer.sol",
        "id": 5752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 8744,
        "src": "8926:42:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/iii6utils/Math/iii6PriceMath.sol",
        "file": "../Math/iii6PriceMath.sol",
        "id": 5753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 7952,
        "src": "8969:35:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/iii6utils/Wallets/iii6Safes.sol",
        "file": "../Wallets/iii6Safes.sol",
        "id": 5754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 10233,
        "src": "9005:34:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/iii6utils/Misc/iii6Misc.sol",
        "file": "../Misc/iii6Misc.sol",
        "id": 5755,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6110,
        "sourceUnit": 8110,
        "src": "9040:30:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5756,
              "name": "ERC20",
              "nameLocations": [
                "9102:5:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1640,
              "src": "9102:5:41"
            },
            "id": 5757,
            "nodeType": "InheritanceSpecifier",
            "src": "9102:5:41"
          },
          {
            "baseName": {
              "id": 5758,
              "name": "ERC20Pausable",
              "nameLocations": [
                "9113:13:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1798,
              "src": "9113:13:41"
            },
            "id": 5759,
            "nodeType": "InheritanceSpecifier",
            "src": "9113:13:41"
          },
          {
            "baseName": {
              "id": 5760,
              "name": "ERC20Burnable",
              "nameLocations": [
                "9132:13:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1764,
              "src": "9132:13:41"
            },
            "id": 5761,
            "nodeType": "InheritanceSpecifier",
            "src": "9132:13:41"
          },
          {
            "baseName": {
              "id": 5762,
              "name": "Ownable",
              "nameLocations": [
                "9151:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 988,
              "src": "9151:7:41"
            },
            "id": 5763,
            "nodeType": "InheritanceSpecifier",
            "src": "9151:7:41"
          },
          {
            "baseName": {
              "id": 5764,
              "name": "iii6Misc",
              "nameLocations": [
                "9164:8:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8109,
              "src": "9164:8:41"
            },
            "id": 5765,
            "nodeType": "InheritanceSpecifier",
            "src": "9164:8:41"
          }
        ],
        "canonicalName": "iii6CoinModel",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6064,
        "linearizedBaseContracts": [
          6064,
          8109,
          988,
          1764,
          1798,
          3135,
          1640,
          1030,
          1824,
          1718,
          3018
        ],
        "name": "iii6CoinModel",
        "nameLocation": "9081:13:41",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 5766,
              "nodeType": "StructuredDocumentation",
              "src": "10968:51:41",
              "text": " @dev declaration of storage vars"
            },
            "functionSelector": "2c4e722e",
            "id": 5768,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "11039:4:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11024:19:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5767,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "11024:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "201a49d6",
            "id": 5770,
            "mutability": "mutable",
            "name": "PUB_SUPPLY",
            "nameLocation": "11064:10:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11049:25:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5769,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "11049:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32cb6b0c",
            "id": 5772,
            "mutability": "mutable",
            "name": "MAX_SUPPLY",
            "nameLocation": "11095:10:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11080:25:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5771,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "11080:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5774,
            "mutability": "mutable",
            "name": "burns",
            "nameLocation": "11124:5:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11111:18:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5773,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "11111:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5776,
            "mutability": "mutable",
            "name": "pauses",
            "nameLocation": "11148:6:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11135:19:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "11135:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4a79d50c",
            "id": 5778,
            "mutability": "mutable",
            "name": "title",
            "nameLocation": "11174:5:41",
            "nodeType": "VariableDeclaration",
            "scope": 6064,
            "src": "11160:19:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5777,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11160:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5826,
              "nodeType": "Block",
              "src": "11865:227:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5803,
                        "name": "_rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5785,
                        "src": "11884:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5802,
                      "name": "_setRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "11875:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 5804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:15:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5805,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:15:41"
                },
                {
                  "documentation": "@dev see _setRate() :: line138 ",
                  "expression": {
                    "id": 5808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5806,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5772,
                      "src": "11938:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5807,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5787,
                      "src": "11951:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11938:20:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5809,
                  "nodeType": "ExpressionStatement",
                  "src": "11938:20:41"
                },
                {
                  "expression": {
                    "id": 5812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5810,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5778,
                      "src": "11968:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5811,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5781,
                      "src": "11976:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11968:13:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5813,
                  "nodeType": "ExpressionStatement",
                  "src": "11968:13:41"
                },
                {
                  "expression": {
                    "id": 5816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5814,
                      "name": "burns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5774,
                      "src": "11991:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5815,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5789,
                      "src": "11999:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11991:13:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5817,
                  "nodeType": "ExpressionStatement",
                  "src": "11991:13:41"
                },
                {
                  "expression": {
                    "id": 5820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5818,
                      "name": "pauses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5776,
                      "src": "12014:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5819,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5791,
                      "src": "12023:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12014:15:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5821,
                  "nodeType": "ExpressionStatement",
                  "src": "12014:15:41"
                },
                {
                  "expression": {
                    "id": 5824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5822,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5768,
                      "src": "12039:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5823,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5785,
                      "src": "12046:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12039:12:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5825,
                  "nodeType": "ExpressionStatement",
                  "src": "12039:12:41"
                }
              ]
            },
            "documentation": {
              "id": 5779,
              "nodeType": "StructuredDocumentation",
              "src": "11255:278:41",
              "text": " @dev creates an instance of iii6CoinModel\n @param _name token name\n @param _sym token symbol\n @param _rate token rate\n @param _supply max token supply // if 0-infinte\n @param _burn bool burnable\n @param _pause bool pauseble"
            },
            "id": 5827,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5794,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5781,
                    "src": "11832:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5795,
                    "name": "_sym",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5783,
                    "src": "11839:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5796,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5793,
                  "name": "ERC20",
                  "nameLocations": [
                    "11826:5:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1640,
                  "src": "11826:5:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "11826:18:41"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5798,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "11853:3:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11857:6:41",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11853:10:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5800,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5797,
                  "name": "Ownable",
                  "nameLocations": [
                    "11845:7:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 988,
                  "src": "11845:7:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "11845:19:41"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5781,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "11573:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11559:19:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5780,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11559:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5783,
                  "mutability": "mutable",
                  "name": "_sym",
                  "nameLocation": "11616:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11602:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5782,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11602:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5785,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "11654:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11646:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11646:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5787,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "11732:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11724:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11724:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5789,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "11774:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11769:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5791,
                  "mutability": "mutable",
                  "name": "_pause",
                  "nameLocation": "11813:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "11808:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5790,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11808:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11549:276:41"
            },
            "returnParameters": {
              "id": 5801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11865:0:41"
            },
            "scope": 6064,
            "src": "11538:554:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5850,
              "nodeType": "Block",
              "src": "13887:94:41",
              "statements": [
                {
                  "assignments": [
                    5836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5836,
                      "mutability": "mutable",
                      "name": "gP",
                      "nameLocation": "13905:2:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 5850,
                      "src": "13897:10:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5835,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13897:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5838,
                  "initialValue": {
                    "id": 5837,
                    "name": "_newRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5830,
                    "src": "13910:8:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13897:21:41"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5839,
                      "name": "gP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5836,
                      "src": "13932:2:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13937:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13932:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5845,
                  "nodeType": "IfStatement",
                  "src": "13928:20:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5842,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "13940:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13940:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5844,
                    "nodeType": "ExpressionStatement",
                    "src": "13940:8:41"
                  }
                },
                {
                  "expression": {
                    "id": 5848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5846,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5768,
                      "src": "13965:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5847,
                      "name": "gP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5836,
                      "src": "13972:2:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13965:9:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5834,
                  "id": 5849,
                  "nodeType": "Return",
                  "src": "13958:16:41"
                }
              ]
            },
            "documentation": {
              "id": 5828,
              "nodeType": "StructuredDocumentation",
              "src": "13587:232:41",
              "text": " @dev sets token price in denomination currency ocoin\n @param _newRate token price in $ocoin (denomination currency)\n denomination currency can be set in setCurr()\n @return uint256 rate in gascoin"
            },
            "id": 5851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRate",
            "nameLocation": "13833:8:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5830,
                  "mutability": "mutable",
                  "name": "_newRate",
                  "nameLocation": "13850:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5851,
                  "src": "13842:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13842:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13841:18:41"
            },
            "returnParameters": {
              "id": 5834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5851,
                  "src": "13878:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13878:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13877:9:41"
            },
            "scope": 6064,
            "src": "13824:157:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1447,
              1797
            ],
            "body": {
              "id": 5874,
              "nodeType": "Block",
              "src": "14167:47:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5869,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5854,
                        "src": "14191:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5870,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5856,
                        "src": "14197:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5871,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5858,
                        "src": "14201:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5866,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "14177:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_iii6CoinModel_$6064_$",
                          "typeString": "type(contract super iii6CoinModel)"
                        }
                      },
                      "id": 5868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14183:7:41",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "14177:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14177:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5873,
                  "nodeType": "ExpressionStatement",
                  "src": "14177:30:41"
                }
              ]
            },
            "documentation": {
              "id": 5852,
              "nodeType": "StructuredDocumentation",
              "src": "13987:55:41",
              "text": " @dev overrides ERC20 & ERC20Pausable"
            },
            "id": 5875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5864,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5863,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "14153:13:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3060,
                  "src": "14153:13:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "14153:13:41"
              }
            ],
            "name": "_update",
            "nameLocation": "14056:7:41",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5862,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5860,
                  "name": "ERC20Pausable",
                  "nameLocations": [
                    "14131:13:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1798,
                  "src": "14131:13:41"
                },
                {
                  "id": 5861,
                  "name": "ERC20",
                  "nameLocations": [
                    "14146:5:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1640,
                  "src": "14146:5:41"
                }
              ],
              "src": "14122:30:41"
            },
            "parameters": {
              "id": 5859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5854,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14072:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "14064:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14064:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5856,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14086:2:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "14078:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14078:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5858,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14098:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "14090:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14090:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14063:41:41"
            },
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14167:0:41"
            },
            "scope": 6064,
            "src": "14047:167:41",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5889,
              "nodeType": "Block",
              "src": "15995:39:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5886,
                        "name": "_rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5878,
                        "src": "16021:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5885,
                      "name": "_setRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "16012:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 5887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16012:15:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5884,
                  "id": 5888,
                  "nodeType": "Return",
                  "src": "16005:22:41"
                }
              ]
            },
            "documentation": {
              "id": 5876,
              "nodeType": "StructuredDocumentation",
              "src": "15547:374:41",
              "text": " @dev sets the rate of currency in denomination currency\n @dev check the ocoin for its state to determine what value to type in\n @param // EXTERNAL\n @param _rate  ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\n denomination currency can be set in setCurr()\n @return _setRate // ocoin name as enum Coins"
            },
            "functionSelector": "34fcf437",
            "id": 5890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5880,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "15967:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "15967:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "15967:9:41"
              }
            ],
            "name": "setRate",
            "nameLocation": "15935:7:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5878,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "15951:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5890,
                  "src": "15943:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15943:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15942:15:41"
            },
            "returnParameters": {
              "id": 5884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5883,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5890,
                  "src": "15986:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15986:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15985:9:41"
            },
            "scope": 6064,
            "src": "15926:108:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5904,
              "nodeType": "Block",
              "src": "16408:47:41",
              "statements": [
                {
                  "expression": {
                    "id": 5902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5900,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5772,
                      "src": "16425:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5901,
                      "name": "_newSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5893,
                      "src": "16438:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16425:23:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5899,
                  "id": 5903,
                  "nodeType": "Return",
                  "src": "16418:30:41"
                }
              ]
            },
            "documentation": {
              "id": 5891,
              "nodeType": "StructuredDocumentation",
              "src": "16040:256:41",
              "text": " @dev sets the max supply\n @param // EXTERNAL only owner\n @param _newSupply  ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc\n denomination currency can be set in setCurr()\n @return Max Supply"
            },
            "functionSelector": "6f8b44b0",
            "id": 5905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5895,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "16368:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "16368:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "16368:9:41"
              }
            ],
            "name": "setMaxSupply",
            "nameLocation": "16310:12:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5893,
                  "mutability": "mutable",
                  "name": "_newSupply",
                  "nameLocation": "16331:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5905,
                  "src": "16323:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16323:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16322:20:41"
            },
            "returnParameters": {
              "id": 5899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5905,
                  "src": "16395:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16395:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16394:9:41"
            },
            "scope": 6064,
            "src": "16301:154:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1742
            ],
            "body": {
              "id": 5925,
              "nodeType": "Block",
              "src": "16648:81:41",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5912,
                      "name": "burns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5774,
                      "src": "16662:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 5913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16671:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "16662:14:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5918,
                  "nodeType": "IfStatement",
                  "src": "16658:28:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5915,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "16678:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16678:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5917,
                    "nodeType": "ExpressionStatement",
                    "src": "16678:8:41"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5920,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16702:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16706:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16702:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5922,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "16714:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5919,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1513,
                      "src": "16696:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16696:26:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5924,
                  "nodeType": "ExpressionStatement",
                  "src": "16696:26:41"
                }
              ]
            },
            "documentation": {
              "id": 5906,
              "nodeType": "StructuredDocumentation",
              "src": "16461:135:41",
              "text": " @dev burn function for token holders only for burnable contracts\n @param _amount of tokens to burn // EXTERNAL"
            },
            "functionSelector": "42966c68",
            "id": 5926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "16610:4:41",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16639:8:41"
            },
            "parameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16623:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5926,
                  "src": "16615:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16615:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16614:17:41"
            },
            "returnParameters": {
              "id": 5911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16648:0:41"
            },
            "scope": 6064,
            "src": "16601:128:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5939,
              "nodeType": "Block",
              "src": "16910:40:41",
              "statements": [
                {
                  "expression": {
                    "id": 5937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5934,
                      "name": "pauses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5776,
                      "src": "16927:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "16936:7:41",
                      "subExpression": {
                        "id": 5935,
                        "name": "pauses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5776,
                        "src": "16937:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16927:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5933,
                  "id": 5938,
                  "nodeType": "Return",
                  "src": "16920:23:41"
                }
              ]
            },
            "documentation": {
              "id": 5927,
              "nodeType": "StructuredDocumentation",
              "src": "16735:115:41",
              "text": " @dev toggle the pausable functionality on the contract\n @return pausable state of contract"
            },
            "functionSelector": "c4ae3168",
            "id": 5940,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5929,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "16885:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "16885:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "16885:9:41"
              }
            ],
            "name": "togglePause",
            "nameLocation": "16864:11:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16875:2:41"
            },
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5940,
                  "src": "16904:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16904:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16903:6:41"
            },
            "scope": 6064,
            "src": "16855:95:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5953,
              "nodeType": "Block",
              "src": "17130:38:41",
              "statements": [
                {
                  "expression": {
                    "id": 5951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5948,
                      "name": "burns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5774,
                      "src": "17147:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "17155:6:41",
                      "subExpression": {
                        "id": 5949,
                        "name": "burns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "17156:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17147:14:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5947,
                  "id": 5952,
                  "nodeType": "Return",
                  "src": "17140:21:41"
                }
              ]
            },
            "documentation": {
              "id": 5941,
              "nodeType": "StructuredDocumentation",
              "src": "16956:115:41",
              "text": " @dev toggle the burnable functionality on the contract\n @return burnable state of contract"
            },
            "functionSelector": "778a56ce",
            "id": 5954,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5944,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5943,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "17105:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "17105:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "17105:9:41"
              }
            ],
            "name": "toggleBurn",
            "nameLocation": "17085:10:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17095:2:41"
            },
            "returnParameters": {
              "id": 5947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5954,
                  "src": "17124:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5945,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17124:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17123:6:41"
            },
            "scope": 6064,
            "src": "17076:92:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5981,
              "nodeType": "Block",
              "src": "17415:128:41",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5962,
                      "name": "pauses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5776,
                      "src": "17429:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 5963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17439:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "17429:15:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5968,
                  "nodeType": "IfStatement",
                  "src": "17425:29:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5965,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "17446:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17446:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5967,
                    "nodeType": "ExpressionStatement",
                    "src": "17446:8:41"
                  }
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5969,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "17468:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 5970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17468:8:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5974,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3118,
                        "src": "17503:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 5975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17503:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5976,
                    "nodeType": "ExpressionStatement",
                    "src": "17503:8:41"
                  },
                  "id": 5977,
                  "nodeType": "IfStatement",
                  "src": "17464:47:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5971,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "17478:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 5972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17478:10:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5973,
                    "nodeType": "ExpressionStatement",
                    "src": "17478:10:41"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5978,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "17528:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 5979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17528:8:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5961,
                  "id": 5980,
                  "nodeType": "Return",
                  "src": "17521:15:41"
                }
              ]
            },
            "documentation": {
              "id": 5955,
              "nodeType": "StructuredDocumentation",
              "src": "17174:181:41",
              "text": " @dev if contract pauses the state get checked and toggled via condition to opposite state\n @return active state of contract (true = paused / false = active)"
            },
            "functionSelector": "d37e5104",
            "id": 5982,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5958,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5957,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "17390:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "17390:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "17390:9:41"
              }
            ],
            "name": "toggleState",
            "nameLocation": "17369:11:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17380:2:41"
            },
            "returnParameters": {
              "id": 5961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "17409:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17409:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17408:6:41"
            },
            "scope": 6064,
            "src": "17360:183:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6031,
              "nodeType": "Block",
              "src": "17763:208:41",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5990,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "17777:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17781:5:41",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "17777:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5992,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5985,
                        "src": "17790:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 5993,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5768,
                        "src": "17800:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17790:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17777:27:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5999,
                  "nodeType": "IfStatement",
                  "src": "17773:41:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5996,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "17806:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17806:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5998,
                    "nodeType": "ExpressionStatement",
                    "src": "17806:8:41"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6000,
                              "name": "MAX_SUPPLY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5772,
                              "src": "17829:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 6001,
                              "name": "PUB_SUPPLY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5770,
                              "src": "17842:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17829:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6003,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17828:25:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6004,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5985,
                              "src": "17857:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 6007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 6005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17867:2:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 6006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17871:2:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "17867:6:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "17857:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6009,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17856:18:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17828:46:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17877:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17828:50:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6016,
                  "nodeType": "IfStatement",
                  "src": "17824:64:41",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6013,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "17880:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17880:8:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6015,
                    "nodeType": "ExpressionStatement",
                    "src": "17880:8:41"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6018,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17904:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17908:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17904:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6020,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5985,
                          "src": "17916:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 6023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 6021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17926:2:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 6022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17930:2:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "17926:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "17916:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6017,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "17898:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17898:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6026,
                  "nodeType": "ExpressionStatement",
                  "src": "17898:35:41"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6027,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5985,
                      "src": "17950:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 6028,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5768,
                      "src": "17960:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17950:14:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5989,
                  "id": 6030,
                  "nodeType": "Return",
                  "src": "17943:21:41"
                }
              ]
            },
            "documentation": {
              "id": 5983,
              "nodeType": "StructuredDocumentation",
              "src": "17549:138:41",
              "text": " @dev buy function for token holders\n @param _amount of tokens to mint // EXTERNAL\n @return uint total price"
            },
            "functionSelector": "3610724e",
            "id": 6032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokens",
            "nameLocation": "17701:9:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5985,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "17719:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6032,
                  "src": "17711:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17711:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17710:17:41"
            },
            "returnParameters": {
              "id": 5989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6032,
                  "src": "17754:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17754:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17753:9:41"
            },
            "scope": 6064,
            "src": "17692:279:41",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6039,
              "nodeType": "Block",
              "src": "18097:47:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6036,
                      "name": "_rcMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6063,
                      "src": "18128:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18128:9:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6038,
                  "nodeType": "ExpressionStatement",
                  "src": "18128:9:41"
                }
              ]
            },
            "documentation": {
              "id": 6033,
              "nodeType": "StructuredDocumentation",
              "src": "17977:87:41",
              "text": " @dev recieve function returns tokens on gascoin transfer to contract"
            },
            "id": 6040,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18077:2:41"
            },
            "returnParameters": {
              "id": 6035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18097:0:41"
            },
            "scope": 6064,
            "src": "18070:74:41",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6044,
              "nodeType": "Block",
              "src": "18284:50:41",
              "statements": []
            },
            "documentation": {
              "id": 6041,
              "nodeType": "StructuredDocumentation",
              "src": "18150:101:41",
              "text": " @dev recieve function returns tokens on gascoin and/or tokens transfer to contract"
            },
            "id": 6045,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18264:2:41"
            },
            "returnParameters": {
              "id": 6043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18284:0:41"
            },
            "scope": 6064,
            "src": "18256:78:41",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6062,
              "nodeType": "Block",
              "src": "18466:85:41",
              "statements": [
                {
                  "assignments": [
                    6050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6050,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "18484:6:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 6062,
                      "src": "18476:14:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18476:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6055,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6051,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "18493:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18497:5:41",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "18493:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 6053,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5768,
                      "src": "18505:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18493:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18476:33:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "18525:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18529:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18525:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6059,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
                        "src": "18537:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6056,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "18519:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18519:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6061,
                  "nodeType": "ExpressionStatement",
                  "src": "18519:25:41"
                }
              ]
            },
            "documentation": {
              "id": 6046,
              "nodeType": "StructuredDocumentation",
              "src": "18340:93:41",
              "text": " @dev does mint  in exchange for gascoin action on recieve() and fallback()"
            },
            "id": 6063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rcMint",
            "nameLocation": "18447:7:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18454:2:41"
            },
            "returnParameters": {
              "id": 6048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18466:0:41"
            },
            "scope": 6064,
            "src": "18438:113:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6110,
        "src": "9072:9481:41",
        "usedErrors": [
          854,
          859,
          1000,
          1005,
          1010,
          1019,
          1024,
          1029,
          3040,
          3043
        ],
        "usedEvents": [
          865,
          1652,
          1661,
          3032,
          3037
        ]
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6065,
              "name": "iii6CoinModel",
              "nameLocations": [
                "18594:13:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6064,
              "src": "18594:13:41"
            },
            "id": 6066,
            "nodeType": "InheritanceSpecifier",
            "src": "18594:13:41"
          }
        ],
        "canonicalName": "iii6CoinModelDrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6109,
        "linearizedBaseContracts": [
          6109,
          6064,
          8109,
          988,
          1764,
          1798,
          3135,
          1640,
          1030,
          1824,
          1718,
          3018
        ],
        "name": "iii6CoinModelDrop",
        "nameLocation": "18573:17:41",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6092,
              "nodeType": "Block",
              "src": "19224:2:41",
              "statements": []
            },
            "documentation": {
              "id": 6067,
              "nodeType": "StructuredDocumentation",
              "src": "18614:360:41",
              "text": " @dev creates an instance of iii6CoinModel\n @param _name token name\n @param _sym token symbol\n @param _rate token rate\n @param _supply max token supply // if 0-infinte\n @param _burn bool burnable\n @param _pause bool pauseble\n @param _curr denomintaor currency // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc"
            },
            "id": 6093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6084,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6069,
                    "src": "19180:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6085,
                    "name": "_sym",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6071,
                    "src": "19187:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6086,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6073,
                    "src": "19193:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 6087,
                    "name": "_supply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6075,
                    "src": "19200:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 6088,
                    "name": "_burn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6077,
                    "src": "19209:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "id": 6089,
                    "name": "_pause",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6079,
                    "src": "19216:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 6090,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6083,
                  "name": "iii6CoinModel",
                  "nameLocations": [
                    "19166:13:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6064,
                  "src": "19166:13:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "19166:57:41"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6069,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "19014:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19000:19:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19000:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6071,
                  "mutability": "mutable",
                  "name": "_sym",
                  "nameLocation": "19043:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19029:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6070,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19029:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6073,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "19065:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19057:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19057:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6075,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "19088:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19080:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19080:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6077,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "19110:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19105:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19105:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6079,
                  "mutability": "mutable",
                  "name": "_pause",
                  "nameLocation": "19130:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19125:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6078,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19125:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6081,
                  "mutability": "mutable",
                  "name": "_curr",
                  "nameLocation": "19154:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "19146:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19146:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18990:175:41"
            },
            "returnParameters": {
              "id": 6091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19224:0:41"
            },
            "scope": 6109,
            "src": "18979:247:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6107,
              "nodeType": "Block",
              "src": "19336:48:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "19352:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19356:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19352:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 6104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 6100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19364:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 6103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 6101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19370:2:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 6102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19374:2:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "19370:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "19364:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 6097,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "19346:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19346:31:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6106,
                  "nodeType": "ExpressionStatement",
                  "src": "19346:31:41"
                }
              ]
            },
            "documentation": {
              "id": 6094,
              "nodeType": "StructuredDocumentation",
              "src": "19232:69:41",
              "text": " @dev Drops users 100 Full Tokens For testnets only"
            },
            "functionSelector": "c7945de0",
            "id": 6108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dropToken",
            "nameLocation": "19315:9:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19324:2:41"
            },
            "returnParameters": {
              "id": 6096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19336:0:41"
            },
            "scope": 6109,
            "src": "19306:78:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6110,
        "src": "18555:831:41",
        "usedErrors": [
          854,
          859,
          1000,
          1005,
          1010,
          1019,
          1024,
          1029,
          3040,
          3043
        ],
        "usedEvents": [
          865,
          1652,
          1661,
          3032,
          3037
        ]
      }
    ],
    "src": "8642:13461:41"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.23+commit.f704f362.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-12-05T23:55:20.110Z",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "burn function for token holders only for burnable contracts",
        "params": {
          "_amount": "of tokens to burn // EXTERNAL"
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
      },
      "buyTokens(uint256)": {
        "details": "buy function for token holders",
        "params": {
          "_amount": "of tokens to mint // EXTERNAL"
        },
        "returns": {
          "_0": "uint total price"
        }
      },
      "constructor": {
        "details": "creates an instance of iii6CoinModel",
        "params": {
          "_burn": "bool burnable",
          "_curr": "denomintaor currency // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc",
          "_name": "token name",
          "_pause": "bool pauseble",
          "_rate": "token rate",
          "_supply": "max token supply // if 0-infinte",
          "_sym": "token symbol"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "dropToken()": {
        "details": "Drops users 100 Full Tokens For testnets only"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setMaxSupply(uint256)": {
        "details": "sets the max supply",
        "params": {
          "": "// EXTERNAL only owner",
          "_newSupply": "ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc denomination currency can be set in setCurr()"
        },
        "returns": {
          "_0": "Max Supply"
        }
      },
      "setRate(uint256)": {
        "details": "sets the rate of currency in denomination currencycheck the ocoin for its state to determine what value to type in",
        "params": {
          "": "// EXTERNAL",
          "_rate": "ocoin (denomination currency) // 0-eth 1-gascoin 2-xCur 2-yCur >4-usdc denomination currency can be set in setCurr()"
        },
        "returns": {
          "_0": "_setRate // ocoin name as enum Coins"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "toggleBurn()": {
        "details": "toggle the burnable functionality on the contract",
        "returns": {
          "_0": "burnable state of contract"
        }
      },
      "togglePause()": {
        "details": "toggle the pausable functionality on the contract",
        "returns": {
          "_0": "pausable state of contract"
        }
      },
      "toggleState()": {
        "details": "if contract pauses the state get checked and toggled via condition to opposite state",
        "returns": {
          "_0": "active state of contract (true = paused / false = active)"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}